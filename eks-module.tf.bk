# # main.tf
# provider "aws" {
#   region = var.aws_region
# }

# module "security_groups" {
#   source  = "git::https://github.com/drewpypro/terraform-aws-sg-module-template.git?ref=v2.0.0"

#   vpc_id = module.vpc.vpc_id

# }

# # EKS Cluster
# module "eks" {
#   source  = "terraform-aws-modules/eks/aws"
#   version = "~> 20.11"

#   cluster_name    = var.cluster_name
#   cluster_version = var.cluster_version

#   vpc_id                                = module.vpc.vpc_id
#   subnet_ids                            = module.vpc.private_subnets
#   cluster_endpoint_public_access        = true
#   cluster_endpoint_private_access       = true
#   cluster_endpoint_public_access_cidrs  = var.SOURCE_SSH_NET
#   cluster_additional_security_group_ids = [module.security_groups.security_group_ids["cluster_endpoint"]]
  
#   # Grant the Terraform caller administrative access to the cluster
#   enable_cluster_creator_admin_permissions = true
#   create_node_security_group = true


#   create_iam_role = true
#   #   create_iam_role = false
#   #   iam_role_arn    = aws_iam_role.eks_cluster_role.arn

#   eks_managed_node_group_defaults = {
#    iam_role_additional_policies = {
#      AmazonEKSWorkerNodePolicy = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
#      AmazonEC2ContainerRegistryReadOnly = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
#    }
#   }

#   cluster_addons = {
#     coredns                = {}
#     kube-proxy             = {}
#     vpc-cni                = {}
#     eks-pod-identity-agent = {}
#   }

#   eks_managed_node_groups = {
#     workers = {
#       name = "worker"

#       instance_types = ["t3.medium"]
#       capacity_type  = "ON_DEMAND"

#       min_size        = 2
#       max_size        = 2
#       desired_size    = 2

#       labels = {
#         role = "worker"
#       }
#     }

#     istio-ingress = {
#       name = "istio"

#       instance_types = ["t3.medium"]
#       capacity_type  = "ON_DEMAND"

#       min_size        = 2
#       max_size        = 2
#       desired_size    = 2

#       labels = {
#         role = "istio-ingress"
#       }

#       taints = [{
#         key    = "dedicated"
#         value  = "istio-ingress"
#         effect = "NO_SCHEDULE"
#       }]
#     }
#  }

#   tags = {
#     Environment = var.environment
#   }

#   depends_on = [
#     module.security_groups,
#   ]
# }
